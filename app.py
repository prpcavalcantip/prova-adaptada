import streamlit as st
import fitz  # PyMuPDF
import docx
import re
from io import BytesIO

st.set_page_config(page_title="AdaptaProva", layout="centered")

st.title("ðŸ§  AdaptaProva - Provas Adaptadas para Alunos com NeurodivergÃªncia")
st.markdown("Envie uma prova em PDF com texto selecionÃ¡vel e selecione a neurodivergÃªncia do aluno para gerar uma versÃ£o adaptada.")

# Banco de dicas para cada neurodivergÃªncia
dicas_por_tipo = {
    "TDAH": [
        "Destaque palavras-chave da pergunta.",
        "Leia a pergunta duas vezes antes de escolher a resposta.",
        "Tente eliminar as alternativas claramente erradas primeiro."
    ],
    "TEA": [
        "Preste atenÃ§Ã£o nas palavras que indicam ordem, como 'primeiro', 'depois', 'por fim'.",
        "Leia com calma. Respire fundo antes de cada pergunta.",
        "Use rascunho para organizar o que entendeu da questÃ£o."
    ],
    "Ansiedade": [
        "Lembre-se: vocÃª pode fazer uma pergunta de cada vez com calma.",
        "Respire fundo antes de comeÃ§ar cada questÃ£o.",
        "VocÃª estÃ¡ preparado. Confie no seu raciocÃ­nio!"
    ]
}

# Upload da prova em PDF
uploaded_file = st.file_uploader("ðŸ“„ Envie a prova em PDF", type=["pdf"])

# Escolha da neurodivergÃªncia
tipo = st.selectbox("ðŸ§  NeurodivergÃªncia do aluno:", ["TDAH", "TEA", "Ansiedade"])

if uploaded_file and tipo:
    if st.button("ðŸ”„ Gerar Prova Adaptada"):
        with st.spinner("Processando..."):

            # LÃª o PDF com PyMuPDF
            doc = fitz.open(stream=uploaded_file.read(), filetype="pdf")
            texto = ""
            for page in doc:
                texto += page.get_text()

            # Divide o texto por questÃµes (ex: "1 ", "2 ", "3 ") usando regex
            questoes = re.split(r'\n?\s*(?:\d+)[\.\)\-]?\s+', texto)
            questoes = [q.strip() for q in questoes if q.strip()]
            questoes = questoes[:10]  # Limita a 10 questÃµes

            # Cria o documento Word
            docx_file = docx.Document()
            docx_file.add_heading("Prova Adaptada", 0)

            for i, questao in enumerate(questoes):
                enunciado = re.sub(r'^\d+\s*[-.)]?\s*', '', questao)  # Remove numeraÃ§Ã£o duplicada

                # Adiciona a questÃ£o
                p = docx_file.add_paragraph()
                p.add_run(f"QUESTÃƒO {i+1}\n").bold = True
                p.add_run(enunciado + "\n")

                # Adiciona dicas
                docx_file.add_paragraph("ðŸ’¡ Dicas para resolver essa questÃ£o:", style='List Bullet')
                for dica in dicas_por_tipo[tipo]:
                    docx_file.add_paragraph(dica, style='List Bullet')

            # Salvar em memÃ³ria
            buffer = BytesIO()
            docx_file.save(buffer)
            buffer.seek(0)

            st.success("Prova adaptada gerada com sucesso!")
            st.download_button(label="ðŸ“¥ Baixar Prova Adaptada (.docx)", data=buffer, file_name="prova_adaptada.docx", mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document")

        docx.save(buffer)
        buffer.seek(0)

        st.success("Prova adaptada gerada com sucesso!")
        st.download_button("ðŸ“„ Baixar Prova Adaptada (DOCX)", buffer, file_name="prova_adaptada.docx")
