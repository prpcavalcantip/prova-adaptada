import streamlit as st
import fitz  # PyMuPDF
import docx
import re
from io import BytesIO
from docx.shared import Pt
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT

st.set_page_config(page_title="AdaptaProva", layout="centered")

st.title("üß† AdaptaProva - Provas Adaptadas para Alunos com Neurodiverg√™ncia")
st.markdown("Envie uma prova em PDF com texto selecion√°vel e selecione a neurodiverg√™ncia do aluno para gerar uma vers√£o adaptada.")

# Banco de dicas para cada neurodiverg√™ncia
dicas_por_tipo = {
    "TDAH": [
        "Destaque palavras-chave da pergunta.",
        "Leia a pergunta duas vezes antes de escolher a resposta.",
        "Tente eliminar as alternativas claramente erradas primeiro."
    ],
    "TEA": [
        "Preste aten√ß√£o nas palavras que indicam ordem, como 'primeiro', 'depois', 'por fim'.",
        "Leia com calma. Respire fundo antes de cada pergunta.",
        "Use rascunho para organizar o que entendeu da quest√£o."
    ],
    "Ansiedade": [
        "Lembre-se: voc√™ pode fazer uma pergunta de cada vez com calma.",
        "Respire fundo antes de come√ßar cada quest√£o.",
        "Voc√™ est√° preparado. Confie no seu racioc√≠nio!"
    ]
}

uploaded_file = st.file_uploader("üìÑ Envie a prova em PDF", type=["pdf"])
tipo = st.selectbox("üß† Neurodiverg√™ncia do aluno:", ["TDAH", "TEA", "Ansiedade"])

if uploaded_file and tipo:
    if st.button("üîÑ Gerar Prova Adaptada"):
        with st.spinner("Processando..."):

            # L√™ o PDF
            doc = fitz.open(stream=uploaded_file.read(), filetype="pdf")
            texto = ""
            for page in doc:
                texto += page.get_text()

            # Divide por "QUEST√ÉO X"
            blocos = re.split(r'\bQUEST√ÉO\s+\d+', texto)
            blocos = [b.strip() for b in blocos if b.strip()]
            if len(blocos) > 10:
                blocos = blocos[1:]  # Remove cabe√ßalho se estiver no primeiro bloco
            blocos = blocos[:10]

            docx_file = docx.Document()
            docx_file.add_heading("Prova Adaptada", 0)

            # Fonte padr√£o 14 pt
            style = docx_file.styles["Normal"]
            style.font.size = Pt(14)

            # DICAS iniciais no topo da prova
            docx_file.add_paragraph("üí° DICAS PARA O ALUNO:", style="List Bullet")
            for dica in dicas_por_tipo[tipo]:
                p = docx_file.add_paragraph(dica, style="List Bullet")
                p.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
                p.paragraph_format.line_spacing = 1.5
            docx_file.add_paragraph("")

            # Adiciona as quest√µes
            for i, bloco in enumerate(blocos):
                # T√≠tulo da quest√£o
                titulo = docx_file.add_paragraph()
                run = titulo.add_run(f"QUEST√ÉO {i+1}")
                run.bold = True
                titulo.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT

                # Enunciado
                enunciado = docx_file.add_paragraph(bloco)
                enunciado.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
                for run in enunciado.runs:
                    run.font.size = Pt(14)

                # Espa√ßo duplo ap√≥s o enunciado
                docx_file.add_paragraph("")
                docx_file.add_paragraph("")

                # Dicas da quest√£o
                docx_file.add_paragraph("üí° Dicas para essa quest√£o:", style="List Bullet")
                for dica in dicas_por_tipo[tipo]:
                    dica_par = docx_file.add_paragraph(dica, style="List Bullet")
                    dica_par.alignment = WD_PARAGRAPH_ALIGNMENT.LEFT
                    dica_par.paragraph_format.line_spacing = 1.5

                # Espa√ßo final
                docx_file.add_paragraph("")

            # Salva o documento em mem√≥ria
            buffer = BytesIO()
            docx_file.save(buffer)
            buffer.seek(0)

            st.success("‚úÖ Prova adaptada gerada com sucesso!")
            st.download_button(
                label="üì• Baixar Prova Adaptada (.docx)",
                data=buffer,
                file_name="prova_adaptada.docx",
                mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
            )
